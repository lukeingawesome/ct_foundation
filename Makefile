# Makefile for Docker development environment

# Automatically detect and export user information
export UID := $(shell id -u)
export GID := $(shell id -g)
export USR := $(shell whoami)
export USERNAME := $(shell whoami)
export PROJECT ?= hanbin_fm
export PROJECT_ROOT := /opt/project
export COMPOSE_PROJECT_NAME := $(PROJECT)

.PHONY: env build up down restart shell clean help

# Default target
help:
	@echo "Available targets:"
	@echo "  env      - Create .env file with current user values"
	@echo "  build    - Build the Docker image"
	@echo "  up       - Start the container"
	@echo "  down     - Stop and remove the container"
	@echo "  restart  - Restart the container"
	@echo "  shell    - Open a shell in the running container"
	@echo "  clean    - Remove container and image"
	@echo "  help     - Show this help message"
	@echo ""
	@echo "Current user settings:"
	@echo "  UID=$(UID)"
	@echo "  GID=$(GID)"
	@echo "  USR=$(USR)"
	@echo "  USERNAME=$(USERNAME)"
	@echo "  PROJECT=$(PROJECT)"
	@echo "  COMPOSE_PROJECT_NAME=$(COMPOSE_PROJECT_NAME)"

# Create .env file with current user values
env:
	@echo "Creating .env file with current user values..."
	@echo "# Docker environment variables" > .env
	@echo "# Generated by 'make env' - modify as needed" >> .env
	@echo "" >> .env
	@echo "# User/Group IDs (automatically detected)" >> .env
	@echo "UID=$(UID)" >> .env
	@echo "GID=$(GID)" >> .env
	@echo "USR=$(USR)" >> .env
	@echo "USERNAME=$(USERNAME)" >> .env
	@echo "" >> .env
	@echo "# Project configuration" >> .env
	@echo "PROJECT=$(PROJECT)" >> .env
	@echo "PROJECT_ROOT=$(PROJECT_ROOT)" >> .env
	@echo "COMPOSE_PROJECT_NAME=$(COMPOSE_PROJECT_NAME)" >> .env
	@echo "" >> .env
	@echo ".env file created successfully!"
	@echo "Current settings: UID=$(UID), GID=$(GID), USR=$(USR), USERNAME=$(USERNAME)"

# Build the Docker image (automatically uses current user settings)
build:
	@echo "Building with UID=$(UID), GID=$(GID), USR=$(USR), USERNAME=$(USERNAME), PROJECT=$(PROJECT)"
	@docker compose -p $(PROJECT) build

# Start the container
up:
	@echo "Starting container with UID=$(UID), GID=$(GID), USR=$(USR), USERNAME=$(USERNAME), PROJECT=$(PROJECT)"
	@docker compose -p $(PROJECT) up -d

# Stop and remove the container
down:
	@docker compose -p $(PROJECT) down

# Restart the container
restart: down up

# Open a shell in the running container
shell:
	@docker compose -p $(PROJECT) exec irail /bin/bash

# Remove container and image
clean:
	@docker compose -p $(PROJECT) down --rmi all --volumes --remove-orphans

# Force recreate .env file
env-force:
	@rm -f .env
	@$(MAKE) env

# Show current environment variables
show-env:
	@echo "Current environment variables:"
	@echo "UID=$(UID)"
	@echo "GID=$(GID)"
	@echo "USR=$(USR)"
	@echo "USERNAME=$(USERNAME)"
	@echo "PROJECT=$(PROJECT)"
	@echo "PROJECT_ROOT=$(PROJECT_ROOT)"
	@echo "COMPOSE_PROJECT_NAME=$(COMPOSE_PROJECT_NAME)" 
